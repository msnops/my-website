apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: devops-academy-frontend
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: devops-academy-frontend
  template:
    metadata:
      labels:
        app: devops-academy-frontend
    spec:
      containers:
      - name: frontend
        image: devops-academy/frontend:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: VITE_SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-credentials
              key: url
        - name: VITE_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-credentials
              key: anon-key
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
  strategy:
    canary:
      steps:
      - setWeight: 20
      - pause: {duration: 30s}
      - setWeight: 40
      - pause: {duration: 30s}
      - setWeight: 60
      - pause: {duration: 30s}
      - setWeight: 80
      - pause: {duration: 30s}
      canaryService: devops-academy-frontend-canary
      stableService: devops-academy-frontend-stable
      trafficRouting:
        nginx:
          stableIngress: devops-academy-frontend-ingress
---
apiVersion: v1
kind: Service
metadata:
  name: devops-academy-frontend-stable
  namespace: default
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: devops-academy-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: devops-academy-frontend-canary
  namespace: default
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: devops-academy-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-academy-frontend-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - devops-academy.example.com
    secretName: devops-academy-tls
  rules:
  - host: devops-academy.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: devops-academy-frontend-stable
            port:
              number: 80
